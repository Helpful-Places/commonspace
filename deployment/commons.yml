apiVersion: apps/v1
kind: Deployment
metadata:
  name: swl-commons
  labels:
    app: swl-commons
    contact: essoto
spec:
  selector:
    matchLabels:
      app: swl-commons
  replicas: 1
  template:
    metadata:
      labels:
        app: swl-commons
    spec:
      volumes:
      - name: cloudsql-commons-credentials
        secret:
          secretName: cloudsql-commons-credentials
      - name: commons-config
        secret:
          secretName: commons-config
      containers:
      - name: commons-server
        image: swl-eng/commons-server:latest
        ports:
          - containerPort: 3000
        # The following environment variables will contain the database host,
        # user and password to connect to the PostgreSQL instance.
        env:
         # [START secrets]
         - name: GOOGLE_AUTH_CLIENT_ID
           valueFrom:
             secretKeyRef:
               name: commons-config
               key: GOOGLE_AUTH_CLIENT_ID
         - name: GOOGLE_AUTH_CLIENT_SECRET
           valueFrom:
             secretKeyRef:
               name: commons-config
               key: GOOGLE_AUTH_CLIENT_SECRET
         - name: DB_HOST
           valueFrom:
             secretKeyRef:
               name: commons-config
               key: DB_HOST
         - name: DB_USER
           valueFrom:
             secretKeyRef:
               name: commons-config
               key: DB_USER
         - name: DB_PASS
           valueFrom:
             secretKeyRef:
               name: commons-config
               key: DB_PASS
         - name: DB_NAME
           valueFrom:
             secretKeyRef:
               name: commons-config
               key: DB_NAME
         - name: DB_PORT
           valueFrom:
             secretKeyRef:
               name: commons-config
               key: DB_PORT
         - name: DB_POOL_SIZE
           valueFrom:
             secretKeyRef:
               name: commons-config
               key: DB_POOL_SIZE
         - name: DB_CLIENT_TIMEOUT
           valueFrom:
             secretKeyRef:
               name: commons-config
               key: DB_CLIENT_TIMEOUT
         - name: SERVER_HOSTNAME
           valueFrom:
             secretKeyRef:
               name: commons-config
               key: SERVER_HOSTNAME
         - name: JWT_SECRET
           valueFrom:
             secretKeyRef:
               name: commons-config
               key: JWT_SECRET
         - name: NODE_ENV
           valueFrom:
             secretKeyRef:
               name: commons-config
               key: NODE_ENV
         - name: NODE_PORT
           valueFrom:
             secretKeyRef:
               name: commons-config
               key: NODE_PORT
         - name: JWT_EXPIRATION_MS
           valueFrom:
             secretKeyRef:
               name: commons-config
               key: JWT_EXPIRATION_MS
         # [END secrets]
        command: ["node", "/commons/build/server.js"]
      - name: commons-nginx
        image: swl-eng/commons-nginx:latest
        ports:
            - containerPort: 80
        command:
          - nginx
          - -c
          - /commons.nginx.conf
          - -g
          - 'daemon off;'
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy",
                  "-instances=nyc-tlc-1225:us-central1:gehl-data-collector-central=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
        volumeMounts:
          - name: cloudsql-commons-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
